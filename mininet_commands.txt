-> Create network
.Default topology (1 AP, 2 stations)
 sudo mn --wifi

.Specify paarameters
 sudo mn --wifi --ssid=new_ssid --mode=g --channel=1

.Specify the topology
 1 AP, 5 stations: sudo mn --wifi --topo single,5
 5 APs (connected in line via wired media), 5 stations: sudo mn --wifi --topo linear,5
 
. Script for creating a linear topology in which sta1 can reach sta2, sta2 can reach sta3 (and vice versa) but sta1 canâ€™t reach sta3 directly
sta1wlan0 = DynamicWmediumdIntfRef(sta1)
sta2wlan0 = DynamicWmediumdIntfRef(sta2)
sta3wlan0 = DynamicWmediumdIntfRef(sta3)
intfrefs = [sta1wlan0, sta2wlan0, sta3wlan0]
links = [
	WmediumdLink(sta1wlan0, sta2wlan0, 15),
	WmediumdLink(sta2wlan0, sta1wlan0, 15),
	WmediumdLink(sta2wlan0, sta3wlan0, 15),
	WmediumdLink(sta3wlan0, sta2wlan0, 15)]
WmediumdConn.set_wmediumd_data(intfrefs, links)
 
-> Enable monitoring of wireless traffic
sh ifconfig hwsim0 up
Now, interface hwsim0 in available for capture Wireshark

-> Clean
sudo mn -c

-> Changes at runtime
.setting the position:
 mininet-wifi>py sta1.moveNodeTo('40,20,40')
.setting up the antenna gain:
 mininet-wifi>py sta1.setAntennaGain('sta1-wlan0', 5)
.setting the signal range:
 mininet-wifi>py sta.setRange(100)
.setting Tx Power:
 mininet-wifi>py sta1.setTxPower('sta1-wlan0', 10)
.moving association to ap1:
 mininet-wifi>py sta1.moveAssociationTo('sta1-wlan0', ap1)
 
-> Getting info
.getting the position:
 mininet-wifi>py sta1.params['position']
.getting AP that a specific station is associated:
 mininet-wifi>py sta1.params['associatedTo']
.getting APs in range:
 mininet-wifi>py sta1.params['apsInRange']
.getting the channel:
 mininet-wifi>py sta1.params['channel']
.getting the frequency:
 mininet-wifi>py sta1.params['frequency']
.getting the mode:
 mininet-wifi>py sta1.params['mode']
.getting the rssi:
 mininet-wifi>py sta1.params['rssi']
.getting the Tx Power:
 mininet-wifi>py sta1.params['txpower']
.getting associated stations to ap1:
 mininet-wifi>py ap1.params['associatedStations']
 
-> Saving info
Save node parameters to a text file:
ap1 = net.addAccessPoint('ap1', recordNodeParams=True)


